- cfme.configure.configuration.unset_ntp_servers()
|   - cfme.configure.configuration.set_ntp_servers(servers=('', '', ''))
|   |   - cfme.fixtures.pytest_selenium.force_navigate(page_name='cfg_settings_currentserver_server', args=(), _tries=0, kwargs={})
|   |   |   - cfme.fixtures.pytest_selenium.execute_script(script='miqSparkleOff();', args=(), kwargs={})
|   |   |   -> None
|   |   |   - cfme.login.current_user()
|   |   |   -> None
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc="//div[@id='blocker_div']")
|   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   - cfme.login.login_admin(kwargs={})
|   |   |   |   - cfme.login.current_full_name()
|   |   |   |   |   - cfme.login.logged_in()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   |   |   -> False
|   |   |   |   -> None
|   |   |   |   - cfme.login.logout()
|   |   |   |   |   - cfme.login.logged_in()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   |   |   -> False
|   |   |   |   -> None
|   |   |   |   - cfme.login.login(username='admin', password='smartvm', submit_method=<function _click_on_login at 0x3d77aa0>)
|   |   |   |   |   - cfme.login.logged_in()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.login.logged_in()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   |   |   -> False
|   |   |   |   |   - <MultiMethod 'cfme.web_ui.fill'>.__call__(args=(<cfme.web_ui.Form fields=[('username', '//input[@id="user_name"]'), ('user_verify_password', '//input[@id="user_verify_password"]'), ('user_new_password', '//input[@id="user_new_password"]'), ('password', '//input[@id="user_password"]')]>, {'username': 'admin', 'password': 'smartvm'}), kwds={})
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc='//input[@id="user_name"]')
|   |   |   |   |   |   -> u'input'
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc='//input[@id="user_name"]', attr='type')
|   |   |   |   |   |   -> u'text'
|   |   |   |   |   |   - cfme.web_ui.fill_text(val='admin', textbox='//input[@id="user_name"]')
|   |   |   |   |   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, 'admin')
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.send_keys(text='admin', loc=<selenium.webdriver.remote.webelement.WebElement object at 0x43e2f10>)
|   |   |   |   |   |   -> None
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc='//input[@id="user_password"]')
|   |   |   |   |   |   -> u'input'
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc='//input[@id="user_password"]', attr='type')
|   |   |   |   |   |   -> u'password'
|   |   |   |   |   |   - cfme.web_ui.fill_password(pwbox='//input[@id="user_password"]', password='smartvm')
|   |   |   |   |   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, '********')
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.send_keys(text='smartvm', loc=<selenium.webdriver.remote.webelement.WebElement object at 0x43e2e50>)
|   |   |   |   |   |   -> None
|   |   |   |   |   -> True
|   |   |   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc='//a[@id="login"]', wait_ajax=True)
|   |   |   |   |   -> True
|   |   |   |   |   - cfme.web_ui.flash.assert_no_errors(messages=None)
|   |   |   |   |   |   - cfme.web_ui.flash.get_messages()
|   |   |   |   |   |   -> []
|   |   |   |   |   -> []
|   |   |   |   |   - cfme.fixtures.pytest_selenium.text(loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]', kwargs={})
|   |   |   |   |   -> u'Administrator | EVM'
|   |   |   |   -> None
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.is_page_active(toplevel='Configure', secondlevel=None)
|   |   |   |   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   |   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448c9d0>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb10>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb50>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb90>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cbd0>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cc10>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cc50>)
|   |   |   |   |   |   |   -> False
|   |   |   |   |   |   -> False
|   |   |   |   |   -> None
|   |   |   |   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   |   |   |   -> u'Cloud Intelligence'
|   |   |   |   -> 'Cloud Intelligence'
|   |   |   -> False
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d750>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cf90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ce90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ced0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cdd0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ce10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cd10>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.open_top_level(title='Configure')
|   |   |   |   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x448ce90>
|   |   |   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d850>)
|   |   |   |   -> None
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ca90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cad0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448c9d0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cf50>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cc90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ccd0>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ca90>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d7d0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d8d0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4492050>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4492090>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x44920d0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4492110>)
|   |   |   |   |   |   -> False
|   |   |   |   |   -> False
|   |   |   |   -> None
|   |   |   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   |   |   -> u'Configure'
|   |   |   -> 'Configure'
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cad0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cfd0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cb50>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cbd0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ca10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448cc10>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x448cad0>
|   |   |   - cfme.web_ui.menu.open_second_level(top_level_element=<selenium.webdriver.remote.webelement.WebElement object at 0x448cad0>, title='Configuration')
|   |   |   |   - cfme.web_ui.menu.get_second_level_element(top_level_el=<selenium.webdriver.remote.webelement.WebElement object at 0x448cad0>, title='Configuration')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x448cb50>
|   |   |   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x448ce50>)
|   |   |   |   -> None
|   |   |   -> None
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d850>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447dd10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d810>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447db10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447da90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447dd90>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x447d7d0>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.configure.configuration.server_region_pair()
|   |   |   |   - cfme.configure.configuration.server_region()
|   |   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   |   |   -> u'10.8.59.238'
|   |   |   |   -> 400
|   |   |   -> (400, 400)
|   |   |   - cfme.configure.configuration.server_region_pair()
|   |   |   |   - cfme.configure.configuration.server_region()
|   |   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   |   |   -> u'10.8.59.238'
|   |   |   |   -> 400
|   |   |   -> (400, 400)
|   |   |   - cfme.configure.configuration.server_zone_description()
|   |   |   -> u'Default Zone'
|   |   |   - cfme.configure.configuration.server_zone_description()
|   |   |   -> u'Default Zone'
|   |   |   - cfme.configure.configuration.server_name()
|   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   |   -> u'10.8.59.238'
|   |   |   -> u'EVM'
|   |   |   - cfme.configure.configuration.server_id()
|   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   |   -> u'10.8.59.238'
|   |   |   -> 400000000000001L
|   |   |   - cfme.web_ui.accordion.tree(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [400000000000001] (current)'), name='Settings')
|   |   |   |   - cfme.web_ui.accordion.click(name='Settings')
|   |   |   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x454cf50>, wait_ajax=True)
|   |   |   |   |   -> True
|   |   |   |   -> True
|   |   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("../../div[contains(@class, 'dhxcont_global_content_area')]//ul[@class='dynatree-container']", "../../div[contains(@class, 'dhxcont_global_content_area')]//div[@class='containerTableStyle']//table[not(ancestor::tr[contains(@style,'none')])]"), kwargs={'root': <selenium.webdriver.remote.webelement.WebElement object at 0x4692490>})
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692650>
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.click_path(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [400000000000001] (current)'))
|   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.expand_path(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)'))
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>)
|   |   |   |   |   |   -> u'ul'
|   |   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>, node_name='CFME Region: Region 400 [400]')
|   |   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692090>
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f0d0>, attr='class')
|   |   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x4692090>, node_name='Zones')
|   |   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x468f810>
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fd10>, attr='class')
|   |   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-exp-e dynatree-ico-e'
|   |   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x468f810>, node_name=u'Zone: Default Zone (current)')
|   |   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692150>
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692590>, attr='class')
|   |   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692150>
|   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x4692650>>.node_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x4692150>, node_name=u'Server: EVM [400000000000001] (current)')
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692590>
|   |   |   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692590>, wait_ajax=True)
|   |   |   |   |   -> True
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692150>
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692150>
|   |   |   - cfme.web_ui.tabstrip.select_tab(ident_string='Server')
|   |   |   |   - cfme.web_ui.tabstrip.is_tab_selected(ident_string='Server')
|   |   |   |   |   - cfme.web_ui.tabstrip.get_clickable_tab(ident_string='Server')
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("//div[contains(@class, 'ui-tabs')]", {LooseVersion ('oldest'): '//ul[@id="tab" and @class="tab"]', '5.3': '//ul[@class="tab2" or @class="tab3"]'}), kwargs={})
|   |   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692490>
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x468fd90>
|   |   |   |   |   - cfme.web_ui.tabstrip.is_tab_element_selected(element=<selenium.webdriver.remote.webelement.WebElement object at 0x468fd90>)
|   |   |   |   |   -> True
|   |   |   |   -> True
|   |   |   -> None
|   |   -> None
|   |   - cfme.fixtures.pytest_selenium.tag(loc="//input[@id='ntp_server_1']")
|   |   -> u'input'
|   |   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_1']", attr='type')
|   |   -> u'text'
|   |   - cfme.web_ui.fill_text(val='', textbox="//input[@id='ntp_server_1']")
|   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, '')
|   |   - cfme.fixtures.pytest_selenium.tag(loc="//input[@id='ntp_server_2']")
|   |   -> u'input'
|   |   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_2']", attr='type')
|   |   -> u'text'
|   |   - cfme.web_ui.fill_text(val='', textbox="//input[@id='ntp_server_2']")
|   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, '')
|   |   - cfme.fixtures.pytest_selenium.tag(loc="//input[@id='ntp_server_3']")
|   |   -> u'input'
|   |   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_3']", attr='type')
|   |   -> u'text'
|   |   - cfme.web_ui.fill_text(val='', textbox="//input[@id='ntp_server_3']")
|   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, '')
|   -> None
-> None
- cfme.fixtures.pytest_selenium.force_navigate(page_name='cfg_settings_currentserver_server', args=(), _tries=0, kwargs={})
|   - cfme.fixtures.pytest_selenium.execute_script(script='miqSparkleOff();', args=(), kwargs={})
|   -> None
|   - cfme.login.current_user()
|   -> <cfme.login.User username='admin', full_name=u'Administrator', password='smartvm'>
|   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc="//div[@id='blocker_div']")
|   -> False
|   - cfme.login.login(username='admin', password='smartvm', submit_method=<function _click_on_login at 0x3d77aa0>)
|   |   - cfme.login.logged_in()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   -> True
|   |   -> True
|   |   - cfme.login.current_username()
|   |   |   - cfme.login.current_user()
|   |   |   -> <cfme.login.User username='admin', full_name=u'Administrator', password='smartvm'>
|   |   -> 'admin'
|   -> None
|   - cfme.web_ui.menu.is_page_active(toplevel='Configure', secondlevel=None)
|   |   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4552490>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x454c050>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x454cf50>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692610>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692310>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x4692490>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46923d0>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   |   -> u'Configure'
|   |   -> 'Configure'
|   -> True
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f190>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f1d0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f910>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f850>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fe50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f310>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f610>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46923d0>
|   - cfme.web_ui.menu.open_second_level(top_level_element=<selenium.webdriver.remote.webelement.WebElement object at 0x46923d0>, title='Configuration')
|   |   - cfme.web_ui.menu.get_second_level_element(top_level_el=<selenium.webdriver.remote.webelement.WebElement object at 0x46923d0>, title='Configuration')
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x4692150>
|   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f910>)
|   |   -> None
|   -> None
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fc50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468f0d0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468ffd0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fed0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468ff10>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fd10>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468fd90>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.configure.configuration.server_region_pair()
|   |   - cfme.configure.configuration.server_region()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   -> u'10.8.59.238'
|   |   -> 400
|   -> (400, 400)
|   - cfme.configure.configuration.server_region_pair()
|   |   - cfme.configure.configuration.server_region()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   |   -> u'10.8.59.238'
|   |   -> 400
|   -> (400, 400)
|   - cfme.configure.configuration.server_zone_description()
|   -> u'Default Zone'
|   - cfme.configure.configuration.server_zone_description()
|   -> u'Default Zone'
|   - cfme.configure.configuration.server_name()
|   |   - cfme.configure.configuration.get_ip_address()
|   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   -> u'10.8.59.238'
|   -> u'EVM'
|   - cfme.configure.configuration.server_id()
|   |   - cfme.configure.configuration.get_ip_address()
|   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   -> u'https://10.8.59.238/ops/explorer'
|   |   -> u'10.8.59.238'
|   -> 400000000000001L
|   - cfme.web_ui.accordion.tree(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [400000000000001] (current)'), name='Settings')
|   |   - cfme.web_ui.accordion.click(name='Settings')
|   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x468a5d0>, wait_ajax=True)
|   |   |   -> True
|   |   -> True
|   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   - cfme.fixtures.pytest_selenium.first_from(locs=("../../div[contains(@class, 'dhxcont_global_content_area')]//ul[@class='dynatree-container']", "../../div[contains(@class, 'dhxcont_global_content_area')]//div[@class='containerTableStyle']//table[not(ancestor::tr[contains(@style,'none')])]"), kwargs={'root': <selenium.webdriver.remote.webelement.WebElement object at 0x46aa090>})
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>
|   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.click_path(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [400000000000001] (current)'))
|   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.expand_path(path=('CFME Region: Region 400 [400]', 'Zones', u'Zone: Default Zone (current)'))
|   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>)
|   |   |   |   -> u'ul'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>, node_name='CFME Region: Region 400 [400]')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa650>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa750>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa650>, node_name='Zones')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa790>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-exp-e dynatree-ico-e'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa790>, node_name=u'Zone: Default Zone (current)')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa350>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>
|   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa3d0>>.node_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>, node_name=u'Server: EVM [400000000000001] (current)')
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa790>
|   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa790>, wait_ajax=True)
|   |   |   -> True
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>
|   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa2d0>
|   - cfme.web_ui.tabstrip.select_tab(ident_string='Server')
|   |   - cfme.web_ui.tabstrip.is_tab_selected(ident_string='Server')
|   |   |   - cfme.web_ui.tabstrip.get_clickable_tab(ident_string='Server')
|   |   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("//div[contains(@class, 'ui-tabs')]", {LooseVersion ('oldest'): '//ul[@id="tab" and @class="tab"]', '5.3': '//ul[@class="tab2" or @class="tab3"]'}), kwargs={})
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x468a750>
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x46aa090>
|   |   |   - cfme.web_ui.tabstrip.is_tab_element_selected(element=<selenium.webdriver.remote.webelement.WebElement object at 0x46aa090>)
|   |   |   -> True
|   |   -> True
|   -> None
-> None
- cfme.fixtures.pytest_selenium.value(loc="//input[@id='ntp_server_1']")
|   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_1']", attr='value')
|   -> u''
-> u''
- cfme.fixtures.pytest_selenium.value(loc="//input[@id='ntp_server_2']")
|   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_2']", attr='value')
|   -> u''
-> u''
- cfme.fixtures.pytest_selenium.value(loc="//input[@id='ntp_server_3']")
|   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='ntp_server_3']", attr='value')
|   -> u''
-> u''
