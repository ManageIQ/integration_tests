- cfme.fixtures.pytest_selenium.force_navigate(page_name='cfg_settings_currentserver_server', args=(), _tries=0, kwargs={})
|   - cfme.fixtures.pytest_selenium.execute_script(script='miqSparkleOff();', args=(), kwargs={})
|   -> None
|   - cfme.login.current_user()
|   -> None
|   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc="//div[@id='blocker_div']")
|   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   - cfme.login.login_admin(kwargs={})
|   |   - cfme.login.current_full_name()
|   |   |   - cfme.login.logged_in()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   -> False
|   |   -> None
|   |   - cfme.login.logout()
|   |   |   - cfme.login.logged_in()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   -> False
|   |   -> None
|   |   - cfme.login.login(username='admin', password='smartvm', submit_method=<function _click_on_login at 0x52e1b18>)
|   |   |   - cfme.login.logged_in()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   -> False
|   |   |   - cfme.login.logged_in()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   -> !!!<class 'selenium.common.exceptions.NoSuchElementException'>
|   |   |   -> False
|   |   |   - <MultiMethod 'cfme.web_ui.fill'>.__call__(args=(<cfme.web_ui.Form fields=[('username', '//input[@id="user_name"]'), ('user_verify_password', '//input[@id="user_verify_password"]'), ('user_new_password', '//input[@id="user_new_password"]'), ('password', '//input[@id="user_password"]')]>, {'username': 'admin', 'password': 'smartvm'}), kwds={})
|   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc='//input[@id="user_name"]')
|   |   |   |   -> u'input'
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc='//input[@id="user_name"]', attr='type')
|   |   |   |   -> u'text'
|   |   |   |   - cfme.web_ui.fill_text(val='admin', textbox='//input[@id="user_name"]')
|   |   |   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, 'admin')
|   |   |   |   - cfme.fixtures.pytest_selenium.send_keys(text='admin', loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37e10>)
|   |   |   |   -> None
|   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc='//input[@id="user_password"]')
|   |   |   |   -> u'input'
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc='//input[@id="user_password"]', attr='type')
|   |   |   |   -> u'password'
|   |   |   |   - cfme.web_ui.fill_password(pwbox='//input[@id="user_password"]', password='smartvm')
|   |   |   |   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, '********')
|   |   |   |   - cfme.fixtures.pytest_selenium.send_keys(text='smartvm', loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a77510>)
|   |   |   |   -> None
|   |   |   -> True
|   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc='//a[@id="login"]', wait_ajax=True)
|   |   |   -> True
|   |   |   - cfme.web_ui.flash.assert_no_errors(messages=None)
|   |   |   |   - cfme.web_ui.flash.get_messages()
|   |   |   |   -> []
|   |   |   -> []
|   |   |   - cfme.fixtures.pytest_selenium.text(loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]', kwargs={})
|   |   |   -> u'Administrator | EVM'
|   |   -> None
|   -> None
|   - cfme.web_ui.menu.is_page_active(toplevel='Configure', secondlevel=None)
|   |   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88790>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88910>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88950>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88990>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a889d0>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a10>)
|   |   |   |   |   -> False
|   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a50>)
|   |   |   |   |   -> False
|   |   |   |   -> False
|   |   |   -> None
|   |   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   |   -> u'Cloud Intelligence'
|   |   -> 'Cloud Intelligence'
|   -> False
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88950>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a887d0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88c50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a90>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88bd0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88c10>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.web_ui.menu.open_top_level(title='Configure')
|   |   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5a379d0>
|   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a77410>)
|   |   -> None
|   -> None
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88bd0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88c10>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88b10>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88e50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88e90>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88dd0>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a77a10>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a77790>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a77310>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a773d0>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37cd0>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37950>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37850>)
|   |   |   |   -> False
|   |   |   -> False
|   |   -> None
|   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   -> u'Configure'
|   -> 'Configure'
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88950>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88b50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88850>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a889d0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88a10>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88990>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88790>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5a37d90>
|   - cfme.web_ui.menu.open_second_level(top_level_element=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37d90>, title='Configuration')
|   |   - cfme.web_ui.menu.get_second_level_element(top_level_el=<selenium.webdriver.remote.webelement.WebElement object at 0x5a37d90>, title='Configuration')
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5a88850>
|   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88790>)
|   |   -> None
|   -> None
|   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88850>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88cd0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88e90>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88e50>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88bd0>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88910>)
|   |   |   -> False
|   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5a88f50>)
|   |   |   -> False
|   |   -> False
|   -> None
|   - cfme.configure.configuration.server_region_pair()
|   |   - cfme.configure.configuration.server_region()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   -> u'10.8.59.64'
|   |   -> 0
|   -> (0, 0)
|   - cfme.configure.configuration.server_region_pair()
|   |   - cfme.configure.configuration.server_region()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   -> u'10.8.59.64'
|   |   -> 0
|   -> (0, 0)
|   - cfme.configure.configuration.server_zone_description()
|   -> u'Default Zone'
|   - cfme.configure.configuration.server_zone_description()
|   -> u'Default Zone'
|   - cfme.configure.configuration.server_name()
|   |   - cfme.configure.configuration.get_ip_address()
|   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   -> u'10.8.59.64'
|   -> u'EVM'
|   - cfme.configure.configuration.server_id()
|   |   - cfme.configure.configuration.get_ip_address()
|   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   -> u'10.8.59.64'
|   -> 1L
|   - cfme.web_ui.accordion.tree(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [1] (current)'), name='Settings')
|   |   - cfme.web_ui.accordion.click(name='Settings')
|   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5b468d0>, wait_ajax=True)
|   |   |   -> True
|   |   -> True
|   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   - cfme.fixtures.pytest_selenium.first_from(locs=("../../div[contains(@class, 'dhxcont_global_content_area')]//ul[@class='dynatree-container']", "../../div[contains(@class, 'dhxcont_global_content_area')]//div[@class='containerTableStyle']//table[not(ancestor::tr[contains(@style,'none')])]"), kwargs={'root': <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2910>})
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>
|   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.click_path(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [1] (current)'))
|   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.expand_path(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)'))
|   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>)
|   |   |   |   -> u'ul'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>, node_name='CFME Region: Region 0 [0]')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d50>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e50>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d50>, node_name='Zones')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cd2050>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cd2110>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-exp-e dynatree-ico-e'
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cd2050>, node_name=u'Zone: Default Zone (current)')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>
|   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2f10>, attr='class')
|   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>
|   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b90>>.node_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>, node_name=u'Server: EVM [1] (current)')
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2f10>
|   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2f10>, wait_ajax=True)
|   |   |   -> True
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>
|   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>
|   - cfme.web_ui.tabstrip.select_tab(ident_string='Server')
|   |   - cfme.web_ui.tabstrip.is_tab_selected(ident_string='Server')
|   |   |   - cfme.web_ui.tabstrip.get_clickable_tab(ident_string='Server')
|   |   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("//div[contains(@class, 'ui-tabs')]", '//ul[@class="tab2" or @class="tab3"]'), kwargs={})
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e90>
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e10>
|   |   |   - cfme.web_ui.tabstrip.is_tab_element_selected(element=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e10>)
|   |   |   -> True
|   |   -> True
|   -> None
-> None
- cfme.fixtures.pytest_selenium.value(loc="//input[@id='server_name']")
|   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='server_name']", attr='value')
|   -> u'EVM'
-> u'EVM'
- <cfme.configure.configuration.BasicInformation company_name=None, appliance_name=None, appliance_zone=None, time_zone=None>.update()
|   - cfme.fixtures.pytest_selenium.force_navigate(page_name='cfg_settings_currentserver_server', args=(), _tries=0, kwargs={})
|   |   - cfme.fixtures.pytest_selenium.execute_script(script='miqSparkleOff();', args=(), kwargs={})
|   |   -> None
|   |   - cfme.login.current_user()
|   |   -> <cfme.login.User username='admin', full_name=u'Administrator', password='smartvm'>
|   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc="//div[@id='blocker_div']")
|   |   -> False
|   |   - cfme.login.login(username='admin', password='smartvm', submit_method=<function _click_on_login at 0x52e1b18>)
|   |   |   - cfme.login.logged_in()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc='//div[@id="page_header_div"]//li[contains(@class, "dropdown")]')
|   |   |   |   -> True
|   |   |   -> True
|   |   |   - cfme.login.current_username()
|   |   |   |   - cfme.login.current_user()
|   |   |   |   -> <cfme.login.User username='admin', full_name=u'Administrator', password='smartvm'>
|   |   |   -> 'admin'
|   |   -> None
|   |   - cfme.web_ui.menu.is_page_active(toplevel='Configure', secondlevel=None)
|   |   |   - cfme.web_ui.menu.get_current_toplevel_name()
|   |   |   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b50>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2dd0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2ad0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2b10>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2990>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2790>)
|   |   |   |   |   |   -> False
|   |   |   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2bd0>)
|   |   |   |   |   |   -> False
|   |   |   |   |   -> False
|   |   |   |   -> None
|   |   |   |   - cfme.fixtures.pytest_selenium.text(loc="//ul[@id='maintab']/li[not(contains(@class, 'in'))]/a", kwargs={})
|   |   |   |   -> u'Configure'
|   |   |   -> 'Configure'
|   |   -> True
|   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2850>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2750>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2f10>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc29d0>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2f90>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d10>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2a90>)
|   |   |   |   -> False
|   |   |   -> False
|   |   -> None
|   |   - cfme.web_ui.menu.get_top_level_element(title='Configure')
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2750>
|   |   - cfme.web_ui.menu.open_second_level(top_level_element=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2750>, title='Configuration')
|   |   |   - cfme.web_ui.menu.get_second_level_element(top_level_el=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2750>, title='Configuration')
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d10>
|   |   |   - cfme.fixtures.pytest_selenium.raw_click(wait_ajax=True, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5ccb050>)
|   |   |   -> None
|   |   -> None
|   |   - cfme.web_ui.menu.get_rid_of_the_menu_box()
|   |   |   - cfme.web_ui.menu.any_box_displayed()
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2750>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d90>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2d50>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2e50>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2c50>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2910>)
|   |   |   |   -> False
|   |   |   |   - cfme.fixtures.pytest_selenium.is_displayed(_deep=0, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc2dd0>)
|   |   |   |   -> False
|   |   |   -> False
|   |   -> None
|   |   - cfme.configure.configuration.server_region_pair()
|   |   |   - cfme.configure.configuration.server_region()
|   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   |   -> u'10.8.59.64'
|   |   |   -> 0
|   |   -> (0, 0)
|   |   - cfme.configure.configuration.server_region_pair()
|   |   |   - cfme.configure.configuration.server_region()
|   |   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   |   -> u'10.8.59.64'
|   |   |   -> 0
|   |   -> (0, 0)
|   |   - cfme.configure.configuration.server_zone_description()
|   |   -> u'Default Zone'
|   |   - cfme.configure.configuration.server_zone_description()
|   |   -> u'Default Zone'
|   |   - cfme.configure.configuration.server_name()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   -> u'10.8.59.64'
|   |   -> u'EVM'
|   |   - cfme.configure.configuration.server_id()
|   |   |   - cfme.configure.configuration.get_ip_address()
|   |   |   |   - cfme.fixtures.pytest_selenium.current_url()
|   |   |   |   -> u'https://10.8.59.64/ops/explorer'
|   |   |   -> u'10.8.59.64'
|   |   -> 1L
|   |   - cfme.web_ui.accordion.tree(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [1] (current)'), name='Settings')
|   |   |   - cfme.web_ui.accordion.click(name='Settings')
|   |   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5b2d3d0>, wait_ajax=True)
|   |   |   |   -> True
|   |   |   -> True
|   |   |   - cfme.web_ui.accordion.locate(name='Settings')
|   |   |   -> '//div[contains(@class, "dhx_acc_item") or @class="topbar"]/*[contains(@class, "dhx_acc_item_label") or contains(@data-remote, "true")]//span[normalize-space(.)="Settings"]'
|   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("../../div[contains(@class, 'dhxcont_global_content_area')]//ul[@class='dynatree-container']", "../../div[contains(@class, 'dhxcont_global_content_area')]//div[@class='containerTableStyle']//table[not(ancestor::tr[contains(@style,'none')])]"), kwargs={'root': <selenium.webdriver.remote.webelement.WebElement object at 0x5cc8310>})
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>
|   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.click_path(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)', u'Server: EVM [1] (current)'))
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.expand_path(path=('CFME Region: Region 0 [0]', 'Zones', u'Zone: Default Zone (current)'))
|   |   |   |   |   - cfme.fixtures.pytest_selenium.tag(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>)
|   |   |   |   |   -> u'ul'
|   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>, node_name='CFME Region: Region 0 [0]')
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc8a90>
|   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8b90>, attr='class')
|   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8a90>, node_name='Zones')
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc8bd0>
|   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8d50>, attr='class')
|   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-exp-e dynatree-ico-e'
|   |   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.node_root_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8bd0>, node_name=u'Zone: Default Zone (current)')
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b396d0>
|   |   |   |   |   - cfme.fixtures.pytest_selenium.get_attribute(loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5b39ed0>, attr='class')
|   |   |   |   |   -> u'dynatree-node dynatree-expanded dynatree-has-children dynatree-lastsib dynatree-exp-el dynatree-ico-e'
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b396d0>
|   |   |   |   - <cfme.web_ui.Tree locator=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>>.node_element(parent=<selenium.webdriver.remote.webelement.WebElement object at 0x5b396d0>, node_name=u'Server: EVM [1] (current)')
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b39ed0>
|   |   |   |   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5b39ed0>, wait_ajax=True)
|   |   |   |   -> True
|   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b396d0>
|   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b396d0>
|   |   - cfme.web_ui.tabstrip.select_tab(ident_string='Server')
|   |   |   - cfme.web_ui.tabstrip.is_tab_selected(ident_string='Server')
|   |   |   |   - cfme.web_ui.tabstrip.get_clickable_tab(ident_string='Server')
|   |   |   |   |   - cfme.fixtures.pytest_selenium.first_from(locs=("//div[contains(@class, 'ui-tabs')]", '//ul[@class="tab2" or @class="tab3"]'), kwargs={})
|   |   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5b399d0>
|   |   |   |   -> <selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>
|   |   |   |   - cfme.web_ui.tabstrip.is_tab_element_selected(element=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8490>)
|   |   |   |   -> True
|   |   |   -> True
|   |   -> None
|   -> None
|   - cfme.fixtures.pytest_selenium.tag(loc="//input[@id='server_name']")
|   -> u'input'
|   - cfme.fixtures.pytest_selenium.get_attribute(loc="//input[@id='server_name']", attr='type')
|   -> u'text'
|   - cfme.web_ui.fill_text(val=u'EVM-CFME', textbox="//input[@id='server_name']")
|   -> (<MultiMethod 'cfme.fixtures.pytest_selenium.set_text'>, u'EVM-CFME')
|   - cfme.fixtures.pytest_selenium.send_keys(text=u'EVM-CFME', loc=<selenium.webdriver.remote.webelement.WebElement object at 0x5b399d0>)
|   -> None
|   - cfme.fixtures.pytest_selenium.click(no_custom_handler=False, loc=FormButton('Save Changes'), wait_ajax=True)
|   -> True
-> None
- cfme.web_ui.flash.assert_message_contain(m='Configuration settings saved for CFME Server "EVM-CFME')
|   - cfme.web_ui.flash.get_messages()
|   |   - cfme.web_ui.flash.message(el=<selenium.webdriver.remote.webelement.WebElement object at 0x5cc8dd0>)
|   |   -> <cfme.web_ui.flash.Message message=u'Configuration settings saved for CFME Server "EVM [1]" in Zone "default"', level='success'>
|   -> [<cfme.web_ui.flash.Message message=u'Configuration settings saved for CFME Server "EVM [1]" in Zone "default"', level='success'>]
-> !!!<type 'exceptions.Exception'>
