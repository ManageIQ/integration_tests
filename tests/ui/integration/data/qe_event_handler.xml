<?xml version="1.0" encoding="UTF-8"?>
<MiqAeDatastore version="1.0">
  <MiqAeClass name="APIMethods" namespace="QE/Automation" description="APIMethods" display_name="APIMethods">
    <MiqAeMethod name="relay_events" language="ruby" scope="instance" location="inline" display_name="relay_events"><![CDATA[#
# Author: mawagner
require "rest-client"

#
# Automate Method
#
$evm.log("info", "Automate Method Started")
#
# Method Code Goes here
#
#
#$evm.root.attributes.sort.each { |k, v| $evm.log("info", "#### Root #{k}: #{v}")}
#$evm.object.attributes.sort.each { |k, v| $evm.log("info", "#### Object #{k}: #{v}")}
 
# example PUT call: curl X PUT http://localhost:8080/events/VmRedhat/vm_name?event=vm_power_on
# example PUT call: curl X PUT http://localhost:8080/events/EmsRedhat/ems_name?event=ems_auth_changed
# example GET call (for debugging only): curl X GET http://localhost:8080/events
 
def base_url
url = "http://#{$evm.object['url']}:#{$evm.object['port']}/#{$evm.object['route1']}"
end
 
def suffix
"?event=#{$evm.root['event']}"
end
 
def put(*opts)
response = RestClient.put(opts.join('/') + suffix, "")
$evm.log("info", "API Call: #{opts.join('/')}#{suffix}")
$evm.log("info", "API Response: #{response.code}")
end

vm = $evm.root['vm']
mgmt_sys = $evm.root['ext_management_system']
 
if !mgmt_sys.nil?
put(base_url, CGI::escape(mgmt_sys.type), CGI::escape(mgmt_sys.name))

elsif !vm.nil?
put(base_url, CGI::escape(vm.type), CGI::escape(vm.name))
end

#
#
#
$evm.log("info", "Automate Method Ended")
exit MIQ_OK]]>    </MiqAeMethod>
    <MiqAeSchema>
      <MiqAeField name="url" substitute="true" aetype="attribute" datatype="string" priority="1" message="create">
localhost      </MiqAeField>
      <MiqAeField name="route1" substitute="true" aetype="attribute" datatype="string" priority="2" message="create">
events      </MiqAeField>
      <MiqAeField name="port" substitute="true" aetype="attribute" datatype="string" priority="3" message="create">
8080      </MiqAeField>
      <MiqAeField name="script" substitute="true" aetype="method" datatype="string" priority="4" message="create">
relay_events      </MiqAeField>
    </MiqAeSchema>
    <MiqAeInstance name="relay_events" display_name="relay_events" description="relay events to API listener">
      <MiqAeField name="url">
        <![CDATA[]]>
      </MiqAeField>
      <MiqAeField name="route1">
        <![CDATA[]]>
      </MiqAeField>
      <MiqAeField name="port">
        <![CDATA[]]>
      </MiqAeField>
      <MiqAeField name="script">
        <![CDATA[]]>
      </MiqAeField>
    </MiqAeInstance>
  </MiqAeClass>
</MiqAeDatastore>
