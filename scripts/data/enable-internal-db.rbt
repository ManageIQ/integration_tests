$$:.push("${miq_lib}")
require 'appliance_console/utilities'
require 'appliance_console/database_configuration'
require 'appliance_console/internal_database_configuration'
require 'appliance_console/external_database_configuration'

config = ApplianceConsole::InternalDatabaseConfiguration.new({
  :region => ${region},
  :interactive => false,
})

# pick the first unpartitioned disk
config.instance_variable_set(:@disk, LinuxAdmin::Disk.local.select {|d| d.partitions.empty?}.first)

# create partition, pv, vg, lv, ext4, update fstab, mount disk
# initdb, relabel log directory for selinux, update configs,
# start pg, create user, create db update the rails configuration,
# verify, set up the database with region. activate does it all!
config.activate

# enable/start related services
config.post_activation

=begin
# bash-fu to put an appliance into a testing state for this script
# assumes sdb, update disk device as needed
systemctl stop evmserverd
/etc/init.d/${postgres_version}-postgresql stop
umount /opt/rh/${postgres_version}/root/var/lib/pgsql/data/
lvremove -f vg_data/lv_pg
vgremove vg_data
pvremove /dev/sdb1
echo "d
1
w" | fdisk /dev/sdb

=end
