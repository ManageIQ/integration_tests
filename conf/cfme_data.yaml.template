# This serves as an example for cfme_data.yaml, with keys that are used in the framework and tests
# all *creds_key maps are primary key lookups for credentials.yaml
# This does not capture all configuration data needed to run all tests in the repository
basic_info:
    app_version: <productized appliance version, x.y.z>
    cfme_images_url:
        downstream-511z: <productized appliance images URL>
        upstream: <upstream appliance images URL>
    vddk_url:
        v6_5: <url for VMware-vix RPM>
        v6_7: <url for VMware-vix RPM>
    wheelhouse:
        host: <hosted python wheelhouse host>
        url: <hosted python wheelhouse url endpoint>
ansible_links:
  playbook_repositories:
      v2v: https://github.com/v2v-test/ansible_playbooks.git
      embedded_ansible: https://github.com/ManageIQ/integration_tests_playbooks.git
  private_repository:
      private_repo: <private repo url.git>
      scm_credentials: scm_creds_key
  vault_credentials: vault_creds_key
automate_links:
    datastore_repositories:
      manageiq_automate: https://github.com/RedHatQE/ManageIQ-automate-git.git

ftpserver:
  host: <ftp server for hosting miq components for import>
  credentials: ftp_creds_key
  entrypoint: "/mnt/poolparty/files"
  entities:
    # Storage path on FTP Server.
    databases: "miq/Databases"
    datastores: "miq/Datastores"
    dialogs: "miq/Dialogs"
    others: "miq/Others"
    reports: "miq/Reports"

test_flags: alerts, actions, cloud_init, crud, cmqe_logging, cockpit, datastore_analysis,
  cluster_analysis, delete_object, discovery, drift_analysis, events, genealogy, host_analysis,
  host_drift_analysis, host_provision, hotdisk, inventory, iso, log, metrics_collection, migrate,
  policy, power_control, prometheus_alerts, provision, pxe, quota, relationship, replication,
  report, rest, retire, retire_extend, services, sdn, snapshot, soap, ssui, tag, tenant, timelines,
  v2v, visuals, vm_analysis, vmware_methods, volumes, html5_console, webmks_console, podtesting, rbac

management_systems:
    vsphere67-nested:
        tags:
            - vsphere
        excluded_test_flags: volumes, html5_console, v2v
        name: vSphere 6.7 (nested)
        default_name: Virtual Center (<ip>)
        credentials: vsphere65-nested_creds_key
        hostname: <vsphere domain name>
        ipaddress: <vsphere ip>
        server_zone: default
        type: virtualcenter
        version: 6.7
        datacenters:
            - Datacenter Name
        clusters:
            - Cluster Name
        vlans:
            - VM Network Name
            - DPortGroup Network Name
        hosts:
            -   name: <vsphere host domain name>
                credentials:
                    default: vspherehost-cred_key
                    remote_login: vspherehost-cred_key
                    web_services: vspherehost-cred_key
                type: esxi
                test_fleece: True
        datastores:
            -   name: NFS_Datastore_Name
                type: nfs
                test_fleece: True
            -   name: iSCSI_Datastore_Name
                type: iscsi
                test_fleece: True
            -   name: ISO_Datastore_Name
                type: iso
                test_fleece: False
                tag: ssa
        provisioning:
            pxe_template: pxe_prov_template
            pxe_server: new_sub_syslinux
            pxe_image: RHEL8.1
            pxe_image_type: RHEL-8
            pxe_kickstart: rhel81
            pxe_root_password: password
            vlan: VM Network Name
            template: template_name
            host: <vsphere provisionion target host domain name>
            datastore: iSCSI_Datastore_Name
            catalog_item_type: VMware
            test_pxe: False
            provision_type: "VMware"
        template_upload:
            block_upload: True  # don't upload MIQ/CFME templates here
        cleanup: True  # used for vm cleanup scripts
        endpoints:
            default:
                hostname: <vsphere domain name>
                ipaddress: <vsphere ip>
                credentials: vsphere67-creds_key
            vmrc:
                credentials: vsphere67-creds_key
        cap_and_util:
            capandu_vm: cu-24x7
            chargeback_vm: cu-24x7
            test_chargeback: True
            cluster: Cluster Name
        vm_analysis_new:
            provisioning:
                vlan: DPortGroup (DSwitch)
                host: <vsphere host domain name>
                datastore: iSCSI_Datastore_Name
            vms:
                centos-xfs:
                    image: env-tpl-centos7-xfs-dnd
                    fs-type: xfs
                    credentials: ssa_centos_creds_key
                ubuntu16-04:
                    image: env-ubuntu16.04-tpl
                    fs-type: ext4
                    credentials: ssa_ubuntu_creds_key
                fedora26-xfs:
                    image: env-fedora26-xfs-tpl
                    fs-type: xfs
                    credentials: ssa_fedora_creds_key
                win2012:
                    image: env-win2012-tpl
                    fs-type: ntfs
                win2016:
                    image: env-win2016-tpl
                    fs-type: ntfs
                rhel74:
                    image: env-rhel74-tpl
                    fs-type: xfs
                    credentials: ssa_rhel_creds_key
        templates:
            console_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
                prompt_text: root@host  # used for console detection
            small_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            full_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            big_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            ubuntu16_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            rhel81_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            win7_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            win10_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            win2012_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
            win2016_template:
                name: <specific template name for this type of test>
                creds: this_template_creds_key
        ansible_target:
            name: ansible_target
            template: v2v-rhel7-mini
            credentials: ssa_rhel_creds_key
    ec2:
        tags:
            - ec2
            - default
        excluded_test_flags: volumes, actions, html5_console, webmks_console, cockpit
        name: ec2-west
        region: us-west-1
        region_name: US West (N. California)
        credentials: amazon_creds_key
        server_zone: default
        type: ec2
        small_template: small_template_name  # TODO Remove
        registry: <docker registry url>
        test_power_control: True
        ownership_vm: cu-9-5
        upload_bucket_name: <bucket for appliance image uploads>
        template_upload:
            block_upload: False
        provisioning:
            instance_type: "t1.micro"
            security_group: "default: default VPC security group"
            item_type: "Amazon"
            guest_keypair: "shared"
            ssh_location: "0.0.0.0/0"
            availability_zone: us-west-1c
            cloud_tenant:
            cloud_network: <vpc network id>
            cloud_subnet: <vpc subnet id>
            stacks:
                - stack_name
            boot_disk_size:
            image:
                id: <ami image id>
                name: <ami image name>
            stack_provisioning:
                key_name: stack_key_name
                db_user: stack_db_user
                db_password: stack_db_cred_key
                db_root_password: stack_root_cred_key
                instance_type: t2.micro
                template_type: "CloudFormation Templates"
                template_type_dd: "Amazon CloudFormation"
                template_name: stack_name
                data_file: aws_vm_template.json
                template_without_parameters: https://s3-us-west-2.amazonaws.com/cloudformation-templates-us-west-2/Managed_EC2_Batch_Environment.template
            ci-image: <template name>
            ci-template: cloudinit
            ci-username: fedora
            ci-pass:
                inherit: customization_templates/cloudinit/replacements/pass
        vm_analysis_new:
            provisioning:
                instance_type: "t2.micro"
                security_group: "default: default VPC security group"
                guest_keypair: "shared"
                ssh_location: "0.0.0.0/0"
                availability_zone: us-west-1c
                cloud_tenant:
                cloud_network: <vpc id>
                cloud_subnet: <subnet id>
            vms:
                ws-server-16:
                    image: <ami id>
                    fs-type: ntfs
                ws-server-12:
                    image: <ami id>
                    fs-type: ntfs
                fedora-31:
                    image: <ami id>
                    fs-type: ext4
                ubuntu16-04:
                    image: <ami id>
                    fs-type: ext4
                rhel-8:
                    image: <ami id>
                    fs-type: xfs
        remove_test:
            instance: cu-9-5
            image: template_name
            stack: stack_name
        cap_and_util:
            capandu_vm: cu-24x7
            chargeback_vm: cu-24x7
            test_chargeback: True
            capandu_azone: us-west-1a
        cleanup: True
        endpoints:
            default:
                credentials: ec2_creds_key  # AMI user
            smartstate:
                credentials: ec2_creds_key  # AMI user
        templates:
            small_template:
                name: <template name>
                creds:   # image doesn't seem to have password auth enabled
            s3_template:
                name: amzn-ami-pv-2018.03.0.20190826-x86_64-s3
                creds:   # image doesn't seem to have password auth enabled
                instance_type: m1.small
        sts_assume_role:
            role_arn: <sts role arn>
            credentials: ec2_sts_creds_key
    openstack:
        tags:
            - openstack
            - default
            name: RHOS13
            excluded_test_flags: alerts
            hostname: <openstack domain name>
            ipaddress: <openstack controller ip>
            auth_url: http://<openstack keystone ip:5000/v3
            domain_id: default
            keystone_version: 3
            api_version: 'Keystone v3'
            port: 5000
            credentials: openstack_creds_key
            amqp_credentials: rabbitmq
            server_zone: default
            type: openstack
            version: 16
            small_template: cirros
            network: 'default-int-net'
            public_network: 'default-ext-net'
            test_power_control: True
            tenant: admin
            provisioning:
                instance_type: m1.tiny
                instance_type2: m1.small
                security_group: "default: Default security group"
                item_type: OpenStack
                guest_keypair:
                availability_zone: nova
                cloud_tenant: admin
                cloud_network: 'default-int-net'
                cloud_object_store: cloud_object_store_container
                stacks:
                    - heatstack_name
                    - customstack_name
                boot_disk_size:
                image:
                    id: <uuid>
                    name: cirros
                    os_distro: linux_generic
                stack_provisioning:
                    key_name: default_key
                    instance_type: m1.small
                    template_type: "Heat Templates"
                    template_type_dd: "OpenStack Heat"
                    template_name: "heatstack"
                    data_file: rhos13_vm_template.data
                use_for_sprout: false
                ci-template: cloudinit-rhv
                ci-username: root
                ci-image: <cloud init image name>
                ci-flavor-name: m1.small
                ci-pass:
                    inherit: customization_templates/cloudinit-rhv/replacements/pass
            networks:
                network_manager: RHOS13 Network Manager
                cloud_tenant: admin
            cap_and_util:
                capandu_vm: cu-24x7
            vm_analysis_new:
                provisioning:
                    instance_type: m1.small
                    security_group: "default: Default security group"
                    availability_zone: nova
                    cloud_tenant: admin
                    cloud_network: 'default-int-net'
                vms:
                    fedora-29-ext4:
                        image: fedora-guest-image-29
                        fs-type: ext4
                        credentials: random_vm_ssh_creds_key
            cleanup: True
            endpoints:
                default:
                    hostname: <openstack domain name>
                    api_port:
                    security_protocol: Non-SSL
                    credentials: openstack_creds_key
                events:
                    event_stream: Ceilometer
            templates:
                console_template:
                    name: cirros
                    creds: cirros_creds_key
                small_template:
                    name: cirros
                    creds: cirros_creds_key
            ansible_target:
                name: ansible_target
                template: cirros
                credentials: cirros_creds_key
    azure:
        tags:
            - azure
            - default
        excluded_test_flags: actions, metrics_collection, volumes, html5_console, webmks_console, cockpit
        test_power_control: True
        do_not_prefer: true
        name: azure
        type: azure
        version: common
        powershell_host: <host with powershell installed>
        credentials: azure_creds_key
        tenant_id: <tenant id>
        subscription_id: <subscription id>
        storage_account: <storage account name
        small_template: fedora-tmpl-sm.vhd  # TODO Remove
        region: East US 2
        region_name: East US 2
        provisioning:
            resource_group: <resource group name>
            storage_account: <storage account name>
            template_container: <storage container name>
            storage_container: <storage container name>
            mode: Incremental (Default)
            cloud_network: <cloud network name and IP range string>
            cloud_subnet:  <cloud subnet name and IP range string>
            security_group: <security group name>
            user_vhd: <vhd blob OS image>
            template_dir: <blob URL for templates>
            vm_dir: <blob URL for vms>
            vm_size: Standard_A1
            instance_type: Standard_A1
            item_type: "Azure"
            customize_password: Pass4Azure1234
            customize_username: qeuser
            # Backend attributes
            virtual_net: <virtual network name>
            address_space: <virtual CIDR range>
            subnet_range: <virtual CIDR range>
            region_api: eastus2
            image:
                name: centos-tmpl
            stack_provisioning:
                template_type: "Azure Templates"
                template_type_dd: "Microsoft Azure"
                template_name: <template name>
                data_file: azure_vm_template.json
            ci-template: cloudinit
            ci-username: root
            ci-image: <cloud init image name>
            ci-pass:
                inherit: customization_templates/cloudinit/replacements/pass
        cap_and_util:
            capandu_vm: cu-24x7
            chargeback_vm: cu-24x7
            test_chargeback: True
            capandu_azone: azure
        cleanup: True
        endpoints:
            default:
                credentials: azure_creds_key
        templates:
            small_template:
                name: small-template-name.vhd
                creds: azure_instance_creds_key
            big_template:
                name: 'Microsoft.Compute/Images/templates/tmpl-osDisk'
                creds: azure_instance_creds_key
        vm_analysis_new:
            vms:
                fedora:
                    image: fedora-sm-tmpl
                    credentials: azure_instance_creds_key
                ubuntu18-04:
                    image: ubuntu18-04tls
                    credentials: azure_instance_creds_key
                centos-7:
                    image: centos-tmpl
                    credentials: azure_instance_creds_key
                windows2012:
                    image: WS12R2Base-tmpl
                    credentials: azure_instance_creds_key
                windows2016:
                    image: WS16Base-tmpl
                    credentials: azure_instance_creds_key
    gce_central:
        since_version: "5.6"
        tags:
            - gce
            - default
        excluded_test_flags: vm_analysis, actions, timelines, html5_console, webmks_console, cockpit
        name: gce_central
        zone: us-central1-a
        region: us-central1
        region_name: Central US
        credentials: gce_creds_key
        type: gce
        project: <project id>
        small_template:  auto-damn-small-linux
        test_power_control: True
        provisioning:
            instance_type: "f1-micro"
            security_group:
            item_type: "Google"
            availability_zone: us-central1-a
            cloud_tenant:
            boot_disk_size: "10 GB"
            cloud_network: default
            guest_keypair:
            image:
                name: auto-damn-small-linux
            ci-template: cloudinit
            ci-username: ubuntu
            ci-image: ubuntu-1710-artful-v20180405
            ci-pass:
                inherit: customization_templates/cloudinit/replacements/pass
        cap_and_util:
            capandu_vm: cu-24x7
            chargeback_vm: cu-24x7
            test_chargeback: True
            capandu_azone: us-east1-b
        cleanup: True
        endpoints:
            default:
                credentials: gce_creds_key
        templates:
            small_template:
                name: auto-damn-small-linux
                creds: random_vm_ssh_creds_key
    lenovo:
        name: lenovo
        type: lenovo
        endpoints:
            default:
                credentials: lenovo
                ipaddress: 10.0.0.1
                hostname: lenovo.hostname
                api_port: 3000
    redfish:
        name: redfish
        type: redfish
        endpoints:
            default:
                credentials: redfish
                hostname: redfish.hostname
                security_protocol: SSL
                api_port: 443
    nuage:
        name: nuage_net
        type: nuage
        api_version: v5_0
        api_version_name: Version 5.0
        endpoints:
            default:
                hostname:
                credentials: nuage
                security_protocol: SSL
                api_port:
    vcloud:
        name: vmware_cloud
        type: vcloud
        api_version: 9.0
        api_version_name: vCloud API 9.0
        endpoints:
            default:
                hostname: 10.11.12.13
                credentials: vcloud
                api_port: 443

configuration_managers:
    sat6:
        type: satellite
        name: Satellite 6
        url: my-satellite.example.com
        ssl: false
        credentials: satellite
        provisioning: true
        config_profiles:
            - rhel7
            - rhel6
management_hosts:
    esx:
        name: esx-01
        hostname: esx-01
        ipaddress: 10.0.0.5
        ipmi_address: 10.0.1.5
        mac_address: ff:ee:dd:cc:bb:aa
        credentials: esx
        ipmi_credentials: ipmi
        user_assigned_os: VMware ESX

auth_modes:
    ldap_server:
        timeout_h: "1"
        timeout_m: "0"
        mode: ldap
        hosts:
            - ad1.example.com
            - ad2.example.com
            - ad3.example.com
        port: "389"
        user_type: principal
        user_suffix: ad.example.com
        get_groups: True
        get_roles: True
        follow_referrals: False
        base_dn: dc=ad,dc=example,dc=com
        bind_dn: administrator@ad.example.com
        bind_password: password
    aws_iam:
        session_timeout_hours: "1"
        session_timeout_mins: "0"
        mode: amazon
        get_groups: True
        credentials: aws
server_roles:
    all:    # Do not change, unless there is a change in the UI!
        - ems_operations
        - ems_metrics_collector
        - ems_metrics_coordinator
        - reporting
        - ems_metrics_processor
        - scheduler
        - smartproxy
        - database_operations
        - smartstate
        - event
        - user_interface
        - web_services
        - ems_inventory
        - notifier
        - automate
        - rhn_mirror
        - database_synchronization
    sets:   # A role not specified in the set is considered to be false (except user_interface)
            # There is a dict generated between `all` and specific set
            # What is in `all` but not in the particular set, is False
            # What is in `all` and also in the particular set, is True
            # It is not a dictionary due to compatibility with the old code.
        default:
            - database_operations
            - event
            - ems_inventory
            - ems_operations
            - reporting
            - scheduler
            - smartstate
            - web_services
group_roles:
    evmgroup-administrator:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - my_services
                - catalogs
                - requests
                - workloads
            clouds:
                - providers
                - availability_zones
                - flavors
                - security_groups
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
                - pxe
                - requests
            control:
                - explorer
                - simulation
                - import_export
                - log
            automate:
                - explorer
                - simulation
                - customization
                - import_export
                - log
                - requests
            optimize:
                - utilization
                - planning
                - bottlenecks
            configure:
                - my_settings
                - tasks
                - smartproxies
                - about
    evmgroup-approver:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - requests
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
                - requests
            control:
                - explorer
                - simulation
                - log
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-auditor:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
            control:
                - explorer
                - simulation
                - log
            optimize:
                - utilization
                - planning
                - bottlenecks
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-desktop:
        menus:
            cloud_intelligence:
                - dashboard
            services:
                - requests
                - workloads
            configure:
                - my_settings
                - about
    evmgroup-operator:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-security:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
            control:
                - explorer
                - simulation
                - log
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-super_administrator:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - my_services
                - catalogs
                - requests
                - workloads
            clouds:
                - providers
                - availability_zones
                - flavors
                - security_groups
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
                - pxe
                - requests
            control:
                - explorer
                - simulation
                - import_export
                - log
            automate:
                - explorer
                - simulation
                - customization
                - import_export
                - log
                - requests
            optimize:
                - utilization
                - planning
                - bottlenecks
            configure:
                - my_settings
                - tasks
                - configuration
                - smartproxies
                - about
    evmgroup-support:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
            control:
                - explorer
                - simulation
                - log
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-user:
        menus:
            cloud_intelligence:
                - dashboard
                - reports
                - chargeback
                - timelines
                - rss
            services:
                - workloads
            clouds:
                - instances
            infrastructure:
                - providers
                - clusters
                - hosts
                - virtual_machines
                - resource_pools
                - datastores
            configure:
                - my_settings
                - tasks
                - about
    evmgroup-user_limited_self_service:
        menus:
            services:
                - requests
            infrastructure:
                - virtual_machines
                - requests
            configure:
                - my_settings
                - about
    evmgroup-user_self_service:
        menus:
            services:
                - requests
            infrastructure:
                - virtual_machines
                - requests
            configure:
                - my_settings
                - about
    evmgroup-vm_user:
        menus:
            services:
                - requests
                - workloads
            configure:
                - my_settings
                - about

clone_retire_setup:
    vmware_linux_workflow:
        vm_name: firstVM
        number_of_cpu: 1
        vm_memory: 1024
        owner_first_name: testFirst
        owner_last_name: testLast
        owner_email: test@company.com
ip_echo:
    host: "somehost"
    port: 8080
mail_collector:
    test_email: "email@email.com"
log_db_depot:
    machine:
        credentials: machine_creds
        smb:
            hostname: smb.example.com/sharename
            path_on_host: /path/on/host
            use_for_log_collection: True
            use_for_db_backups: False
        nfs:
            hostname: nfs.example.com/path/on/host
            use_for_log_collection: False
            use_for_db_backups: True
        ftp:
            hostname: ftp.example.com
            use_for_log_collection: True
datastores_not_for_provision:
    - datastore-name-1      # uses `in` operator
    - datastore-name-2
redhat_updates:
    current_version: 1.2.3.4
    registration:
        rhsm:
            test_registration: True
            test_direct: True
            test_rhn_mirror: True
            use_http_proxy: True
            url: subscription.rhn.redhat.com
            enable_repo: cfme-repo-name
        sat5:
            test_registration: True
            test_direct: True
            use_http_proxy: True
            url: https://sat5.example.com
            add_channel: cfme-channel-name
            organization: 2
        sat6:
            test_registration: False
            test_direct: False
            test_rhn_mirror: False
            use_http_proxy: False
            url: https://sat6.example.com
            enable_repo:
        http_proxy:
            url: 1.2.3.4:5678
    appliances:
        EVM:
            register: True
            update: True
        EVM_2:
            register: True
            update: True
    download_repo_files:
        - url: http://my.example.com/repos/latest/my_repository.repo
          reg_methods:
              - rhsm
              - rhn_mirror
    enable_repos:
    add_channels:
storage:
    managers:
        netapp-mgr-id-1:
            name: its name
            type: NetApp Remote Service
            hostname: some-server.example.com
            ip: 1.2.3.4
            credentials: netapp-storage
    testing:
        file_shares:
            - col: val
              col2: val2

resources:
     databases:
        jdbc_drivers:
            jdbc_drivers_url: jdbc driver file url
        db_allocator:
            db_allocate_url: url for allocation
            db_deallocate_url: url for deallocation

customization_templates:
    rhel81:
        name: rhel69
        description: rhel69descrip
        image_type: RHEL-6
        script_type: Kickstart
        script_file: data/rhel6.cfg
        replacements:
            url1: <pxe sources misc url>
            file1: <rhev agent RPM>
            url2: <rhel server OS download url>
            url3: <rhel server OS optional download url>

    cloudinit:
        name: cloudinit
        description: BasicCloudInitTemplate
        image_type: RHEL-6
        script_type: CloudInit
        script_file: data/basiccloudinit.cfg
        replacements:
            pass: mysecret

cfme_annotations_path: data/testcase_tiers_and_types.csv

clock_servers:
    - 0.pool.ntp.org
    - 1.pool.ntp.org
    - 2.pool.ntp.org

vm_console:
    cert:
        install_dir: /var/www/miq/vmdb/certs
        country: US
        state: North Carolina
        city: Durham
        organization: CFME
        organizational_unit: QE
